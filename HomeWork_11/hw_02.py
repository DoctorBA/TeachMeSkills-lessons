'''Задача 2.
Числа Фибоначчи представляют последовательность, получаемую в результате сложения
двух предыдущих элементов. Начинается коллекция с чисел 1 и 1. Она
достаточно быстро растет, поэтому вычисление больших значений занимает немало времени.
Создайте функцию fib(n), генерирующую n чисел Фибоначчи с минимальными
затратами ресурсов.
Для реализации этой функции потребуется обратиться к инструкции yield. Она не сохраняет
в оперативной памяти огромную последовательность, а дает возможность
"доставать" промежуточные результаты по одному.
________________________________
Решить Задачу используя генератор.
'''
#include module 
from typing import Iterable
 
#initialization function Fibonacci
def fib_gen(n: int) -> Iterable[int]:
    result = [1]
    if n > 1:
        result = [1, 1]
        for value in range(n-2):
            result += [result[value]+result[value+1]]               
    for value in result:
        yield value   

gen_fib = fib_gen(10)
#call function     
print(next(gen_fib))
print(next(gen_fib))
print(next(gen_fib))
